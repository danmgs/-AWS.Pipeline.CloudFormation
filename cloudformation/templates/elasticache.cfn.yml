################################################################################
#
# Cloud formation child template
# Author: NGUYEN Daniel
#
# - Creation of an Elastic Cache in AWS.
#
# Prerequisite(s):
# vpc.network.cfn.yml
# autoscalinggroup.alb.cfn.yml
#
################################################################################

AWSTemplateFormatVersion: 2010-09-09

Description: Creation of an Elastic Cache in AWS.

Parameters:

  ApplicationName:
    Description: The Application name
    Type: String
    MinLength: '1'
    Default: 'DemoApplication'
    ConstraintDescription: must be a valid name
  EnvironmentName:
    Type: String
    Default: production
    Description: "A friendly environment name that will be used for namespacing all cluster resources. Example: staging, qa, or production"
  VPC:
    Description: The VPC in which the elastic cache service belongs to
    Type: AWS::EC2::VPC::Id
    AllowedPattern : "^(?:vpc-[0-9a-z]+|)$"
  PrivateSubnet:
    Description: The PrivateSubnet "Subnet Group" in which the elastic cache service belongs to (private sub is better)
    Type: AWS::EC2::Subnet::Id
  ClusterName:
    Description: Custom name of the cluster. Auto generated if you don't supply your own.
    Type: String
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
  CacheNodeType:
    Description: Cache node instance class, e.g. cache.t2.micro(free tier). See https://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNodes.SelectSize.html
    Type: String
    Default: cache.t2.micro
    ConstraintDescription: Node instance class not supported
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m4.large
      - cache.m4.xlarge
      - cache.m4.2xlarge
      - cache.m4.4xlarge
      - cache.m4.10xlarge
      - cache.r4.large
      - cache.r4.xlarge
      - cache.r4.2xlarge
      - cache.r4.4xlarge
      - cache.r4.8xlarge
      - cache.r4.16xlarge
  CacheEngine:
    Description: The underlying cache engine, either Redis or Memcached
    Type: String
    Default: redis
    ConstraintDescription: Node instance class not supported
    AllowedValues:
      - redis
      - memcached
  CacheNodeCount:
    Description: Number of nodes in the cluster. Only used with memcached engine, for redis this value will be set to 1.
    Type: Number
    MinValue: 1
    MaxValue: 15
    ConstraintDescription: Node count must be between 1 and 15
    Default: 1
  AutoMinorVersionUpgrade:
    Description: Whether or not minor version upgrades to the cache engine should be applied automatically during the maintenance window.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  InboundSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The security group of EC2 instances that will connect to the Elastic Cache service.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Configuration
        Parameters:
          - ApplicationName
          - EnvironmentName
      -
        Label:
          default: "Elastic Cache Shared Settings"
        Parameters:
          - VPC
          - PrivateSubnet
          - ClusterName
          - CacheNodeType
          - CacheEngine
          - CacheNodeCount
          - AutoMinorVersionUpgrade
          - InboundSecurityGroup
      -
        Label:
          default: "Elastic Cache Settings - Specifics Memcached"
        Parameters:
          - CacheNodeCount

Conditions:

  IsRedis: !Equals [ !Ref CacheEngine, 'redis']
  AllowAccessToCache: !Not [ !Equals [!Ref 'InboundSecurityGroup', ''] ]

Resources:

  ElastiCacheSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ElastiCache Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !If [ IsRedis, 6379, 11211]
          ToPort: !If [ IsRedis, 6379, 11211]
      Tags:
        - Key: ApplicationName
          Value: !Ref ApplicationName
        - Key: EnvironmentName
          Value: !Ref EnvironmentName

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress  # prevent security group circular references
    Condition: AllowAccessToCache
    DependsOn: ElastiCacheSG
    Properties:
      GroupId: !Ref ElastiCacheSG
      IpProtocol: tcp
      ToPort: !If [ IsRedis, 6379, 11211]
      FromPort: !If [ IsRedis, 6379, 11211]
      SourceSecurityGroupId: !Ref InboundSecurityGroup

  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Cache Subnet Group
      SubnetIds:
        - !Ref PrivateSubnet

  ElastiCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      Engine: !Ref CacheEngine
      CacheNodeType: !Ref CacheNodeType
      ClusterName : !Ref ClusterName
      NumCacheNodes: !If [ IsRedis, 1, !Ref CacheNodeCount]
      CacheSubnetGroupName: !Ref SubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt ElastiCacheSG.GroupId
      Tags:
        - Key: ApplicationName
          Value: !Ref ApplicationName
        - Key: EnvironmentName
          Value: !Ref EnvironmentName

  StoredConfigElastiCacheAddress:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub ${ApplicationName}:${EnvironmentName}:ElastiCacheAddress
      Name: !Sub '/${ApplicationName}/${EnvironmentName}/ElastiCacheAddress'
      Tier: Standard
      Type: String
      Value: !If [ IsRedis, !GetAtt ElastiCacheCluster.RedisEndpoint.Address, !GetAtt ElastiCacheCluster.ConfigurationEndpoint.Address]
      Tags:
        'ApplicationName': !Ref ApplicationName
        'EnvironmentName': !Ref EnvironmentName

Outputs:

  StoredConfigElastiCacheAddress:
    Description: Elastic Cache Address in Parameter Store
    Value: !GetAtt StoredConfigElastiCacheAddress.Value
    Export:
      Name: !Sub ${AWS::StackName}-StoredConfigElastiCacheAddress

  ElastiCacheAddress:
    Description: ElastiCache endpoint address
    Value: !GetAtt StoredConfigElastiCacheAddress.Value
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheAddress

  ElastiCacheClusterArn:
    Description: ElastiCache Cluster Arn
    Value: !Sub arn:aws:elasticache:${AWS::Region}:${AWS::AccountId}:cluster/${ElastiCacheCluster}
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheClusterArn

  ElastiCacheClusterId:
    Description: ElastiCache Cluster ID
    Value: !Ref ElastiCacheCluster
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheClusterID

  ElastiCacheEngine:
    Description: ElastiCache engine
    Value: !Ref CacheEngine
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheEngine

  ElastiCachePort:
    Description: ElastiCache port
    Value: !If [ IsRedis, 6379, 11211]
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCachePort
