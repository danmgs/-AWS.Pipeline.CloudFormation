################################################################################
#
# Cloud formation child template
# Author: NGUYEN Daniel
#
# - Creation of the EC2 Instance with setup of CodeDeploy agent.
#
################################################################################


Parameters:

  VPC:
    Description: VPC to create the security group and EC2 instance into
    Type: AWS::EC2::VPC::Id
    AllowedPattern : "^(?:vpc-[0-9a-f]{8}|)$"
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t1.micro, t2.nano, t2.micro, t2.small, t2.medium, t2.large, m1.small,
      m1.medium, m1.large, m1.xlarge, m2.xlarge, m2.2xlarge, m2.4xlarge, m3.medium,
      m3.large, m3.xlarge, m3.2xlarge, m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge,
      m4.10xlarge, c1.medium, c1.xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge,
      c3.8xlarge, c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, g2.2xlarge,
      g2.8xlarge, r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge, i2.xlarge,
      i2.2xlarge, i2.4xlarge, i2.8xlarge, d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge,
      hi1.4xlarge, hs1.8xlarge, cr1.8xlarge, cc2.8xlarge, cg1.4xlarge]
  SSHFrom:
    Description: Limit SSH access to bastion hosts to a CIDR IP block
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: 'EC2 Tutorial'
    Description: KeyName
  EC2TagKey0:
    Type: String
    Default: ec2TagKey0
    Description: The Tag for EC2
  EC2TagValue0:
    Type: String
    Default: ec2TagValue0
    Description: The Tag Value for EC2


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "EC2 Configuration"
        Parameters:
          - VPC
          - InstanceType
          - SSHFrom
          - KeyName
          - EC2TagKey0
          - EC2TagValue0


Mappings:
  AWSRegionArch2AMI:
    eu-west-3:
      HVM64: ami-0ebc281c20e89ba4b

Resources:

  SSHSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub SSH Security group for ${AWS::StackName}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - CidrIp: !Ref SSHFrom
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
          Description: SSH for SSHFrom source
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-SSHSecurityGroup"

  WebSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub Web Security group for ${AWS::StackName}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WebSecurityGroup"

  EC2RoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref EC2ServiceRole

  EC2ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-EC2RoleforAWSCodeDeploy"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install CodeDeploy agent and AWS Cli
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              ruby: []
              git: []
              aws-cli: []
          # sources:
          #   "/home/ec2-user/aws-cli": "https://github.com/aws/aws-cli/tarball/master"
          files:
            "/home/ec2-user/install":
              source:
                !Join [ "", [ "http://aws-codedeploy-", !Ref "AWS::Region",".s3.amazonaws.com/latest/install" ] ]
              mode: '000755'
            "/home/ec2-user/.aws/config":
              mode: '000755'
              owner: ec2-user
              group: root
              content: !Sub |
                [default]
                region = ${AWS::Region}
          commands:
            "00-install-agent":
              command: "./install auto"
              cwd: "/home/ec2-user/"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Properties:
      InstanceType: !Ref InstanceType
      # Note we use the pseudo parameter AWS::Region
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', HVM64]
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      KeyName: !Ref 'KeyName'
      SecurityGroupIds:
        - !GetAtt SSHSecurityGroup.GroupId
        - !GetAtt WebSecurityGroup.GroupId
      IamInstanceProfile: !Ref EC2RoleInstanceProfile
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            # Get the latest CloudFormation package
            #yum update -y
            yum install -y aws-cfn-bootstrap
            # Start cfn-init
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r EC2Instance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            # All done so signal success
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
      Tags:
        - Key: !Ref EC2TagKey0
          Value: !Ref EC2TagValue0
        - Key: Name
          Value: !Sub "${AWS::StackName}-EC2Instance"


Outputs:

  OutputEC2InstanceStackName:
    Description: CodeDeploy Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-EC2InstanceStack

  OutputEC2Instance:
    Description: The EC2 Instance ID
    Value: !Ref EC2Instance
    Export:
      Name: !Sub ${AWS::StackName}-EC2Instance

  OutputSSHSecurityGroup:
    Description: The EC2 SSH Security Group
    Value: !Ref SSHSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-SSHSecurityGroup

  OutputWebSecurityGroup:
    Description: The EC2 Web Security Group
    Value: !Ref WebSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-WebSecurityGroup